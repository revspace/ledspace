#!/usr/bin/perl -w
use strict;
use Graphics::ColorUtils qw(hsv2rgb);
use Net::MQTT::Simple;
use Time::HiRes qw(sleep);

my $buizen = 13;
my $leds_per_buis = 36;
my $leds_uit = "\0\0\0" x ($leds_per_buis - 1);
my $bytes = $buizen * $leds_per_buis * 3;
my $delay = .02;
$| = 1;

my $dicht = 0;

sub leds_uit {
    my ($buf, $aantal) = @_;

    my $nullbytes = "\0\0\0" x $aantal;
    substr(
        $buf,
        ($_ * $leds_per_buis * 3 + ($leds_per_buis - $aantal) * 3),
        length($nullbytes),
        $nullbytes 
    ) for 0 .. ($buizen - 1);
    return $buf;
}

my $mqtt = Net::MQTT::Simple->new("mosquitto.space.revspace.nl");
$mqtt->subscribe('revspace/state' => sub {
    my ($topic, $message) = @_;
    $dicht = $message eq 'closed';
});

my $prevdicht = $dicht;
while (my $bytes_read = sysread STDIN, my $buf, $bytes) {
    warn "Short read ($bytes_read)" if $bytes_read != $bytes;

    if ($dicht != $prevdicht) {
        my @range = 1 .. ($leds_per_buis - 1);
        @range = reverse @range if !$dicht;

        for my $leds_uit (@range) {
            print leds_uit $buf, $leds_uit;
            sleep $delay;
        }
        $prevdicht = $dicht;
    }

    print $dicht ? leds_uit($buf, $leds_per_buis - 1) : $buf;
    $mqtt->tick(0);
}
